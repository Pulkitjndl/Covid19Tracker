{"ast":null,"code":"var _jsxFileName = \"D:\\\\heynode\\\\COVID19-Tracker-master\\\\src\\\\components\\\\Charts.js\";\nimport { withStyles } from \"@material-ui/styles\";\nimport React, { Component } from \"react\";\nimport { Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport colors from \"../constants/colors\";\nimport styles from '../styles/ChartsStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Charts extends Component {\n  render() {\n    const {\n      data,\n      classes\n    } = this.props;\n    let result;\n\n    try {\n      const updatedData = data.slice(1).slice(-50);\n      result = updatedData.map(dataItem => {\n        let newObject = {};\n\n        for (let [key, value] of Object.entries(dataItem)) {\n          if (key === \"date\") {\n            newObject[key] = value;\n          } else {\n            newObject[key] = Number(value);\n          }\n        }\n\n        return { ...newObject,\n          totalactive: newObject.totalconfirmed - (newObject.totalrecovered + newObject.totaldeceased)\n        };\n      });\n    } catch (err) {}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.charts,\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 600,\n          height: 300,\n          data: result,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            wrapperStyle: {\n              margin: \"-3rem 1rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"totalconfirmed\",\n            stroke: colors.red,\n            dot: false,\n            activeDot: {\n              r: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"totalactive\",\n            stroke: colors.orange,\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"totalrecovered\",\n            stroke: colors.green,\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"totaldeceased\",\n            stroke: colors.purple,\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(Charts);","map":{"version":3,"sources":["D:/heynode/COVID19-Tracker-master/src/components/Charts.js"],"names":["withStyles","React","Component","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","colors","styles","Charts","render","data","classes","props","result","updatedData","slice","map","dataItem","newObject","key","value","Object","entries","Number","totalactive","totalconfirmed","totalrecovered","totaldeceased","err","charts","top","right","left","bottom","margin","red","r","orange","green","purple"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/styles\";\nimport React, { Component } from \"react\";\nimport {\n  Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis\n} from \"recharts\";\nimport colors from \"../constants/colors\";\nimport styles from '../styles/ChartsStyles';\n\nclass Charts extends Component {\n  render() {\n    const { data, classes } = this.props;\n    let result;\n    try {\n      const updatedData = data.slice(1).slice(-50);\n      result = updatedData.map((dataItem) => {\n        let newObject = {};\n        for (let [key, value] of Object.entries(dataItem)) {\n          if (key === \"date\") {\n            newObject[key] = value;\n          } else {\n            newObject[key] = Number(value);\n          }\n        }\n        return {\n          ...newObject,\n          totalactive:\n            newObject.totalconfirmed -\n            (newObject.totalrecovered + newObject.totaldeceased),\n        };\n      });\n    } catch (err) { }\n\n    return (\n      <div className={classes.charts}>\n        <ResponsiveContainer>\n          <LineChart\n            width={600}\n            height={300}\n            data={result}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend\n              wrapperStyle={{\n                margin: \"-3rem 1rem\",\n              }}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totalconfirmed\"\n              stroke={colors.red}\n              dot={false}\n              activeDot={{ r: 8 }}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totalactive\"\n              stroke={colors.orange}\n              dot={false}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totalrecovered\"\n              stroke={colors.green}\n              dot={false}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totaldeceased\"\n              stroke={colors.purple}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Charts)"]},"metadata":{},"sourceType":"module"}