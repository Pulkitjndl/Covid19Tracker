{"ast":null,"code":"var _jsxFileName = \"D:\\\\heynode\\\\COVID19-Tracker-master\\\\src\\\\components\\\\Barchart.js\";\nimport React, { Component } from \"react\";\nimport { Bar, BarChart, Tooltip, XAxis, YAxis } from \"recharts\";\nexport default class Barchart extends Component {\n  render() {\n    const {\n      data,\n      isLoading,\n      dataKey,\n      stroke\n    } = this.props;\n    let result;\n\n    try {\n      const updatedData = data.slice(1).slice(-50);\n      result = updatedData.map(dataItem => {\n        let newObject = {};\n\n        for (let [key, value] of Object.entries(dataItem)) {\n          if (key === \"date\") {\n            newObject[key] = value;\n          } else {\n            newObject[key] = Number(value);\n          }\n        }\n\n        return { ...newObject,\n          totalactive: newObject.totalconfirmed - (newObject.totalrecovered + newObject.totaldeceased)\n        };\n      });\n    } catch (err) {}\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"barcharts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, !isLoading && /*#__PURE__*/React.createElement(BarChart, {\n      width: 350,\n      height: 150,\n      data: result,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: dataKey,\n      fill: stroke,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/heynode/COVID19-Tracker-master/src/components/Barchart.js"],"names":["React","Component","Bar","BarChart","Tooltip","XAxis","YAxis","Barchart","render","data","isLoading","dataKey","stroke","props","result","updatedData","slice","map","dataItem","newObject","key","value","Object","entries","Number","totalactive","totalconfirmed","totalrecovered","totaldeceased","err","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,KAAxC,QAAqD,UAArD;AAEA,eAAe,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC9CO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA,OAAnB;AAA4BC,MAAAA;AAA5B,QAAuC,KAAKC,KAAlD;AACA,QAAIC,MAAJ;;AACA,QAAI;AACF,YAAMC,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAAC,EAArB,CAApB;AACAF,MAAAA,MAAM,GAAGC,WAAW,CAACE,GAAZ,CAAiBC,QAAD,IAAc;AACrC,YAAIC,SAAS,GAAG,EAAhB;;AACA,aAAK,IAAI,CAACC,GAAD,EAAMC,KAAN,CAAT,IAAyBC,MAAM,CAACC,OAAP,CAAeL,QAAf,CAAzB,EAAmD;AACjD,cAAIE,GAAG,KAAK,MAAZ,EAAoB;AAClBD,YAAAA,SAAS,CAACC,GAAD,CAAT,GAAiBC,KAAjB;AACD,WAFD,MAEO;AACLF,YAAAA,SAAS,CAACC,GAAD,CAAT,GAAiBI,MAAM,CAACH,KAAD,CAAvB;AACD;AACF;;AACD,eAAO,EACL,GAAGF,SADE;AAELM,UAAAA,WAAW,EACTN,SAAS,CAACO,cAAV,IACCP,SAAS,CAACQ,cAAV,GAA2BR,SAAS,CAACS,aADtC;AAHG,SAAP;AAMD,OAfQ,CAAT;AAgBD,KAlBD,CAkBE,OAAOC,GAAP,EAAY,CAAG;;AAEjB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACnB,SAAD,iBACC,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,IAAI,EAAEI,MAHR;AAIE,MAAA,MAAM,EAAE;AAAEgB,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,KAAK,EAAE,EAAjB;AAAqBC,QAAAA,IAAI,EAAE,EAA3B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAEtB,OAAd;AAAuB,MAAA,IAAI,EAAEC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAFJ,CADF;AAiBD;;AAzC6C","sourcesContent":["import React, { Component } from \"react\";\nimport { Bar, BarChart, Tooltip, XAxis, YAxis } from \"recharts\";\n\nexport default class Barchart extends Component {\n  render() {\n    const { data, isLoading, dataKey, stroke } = this.props;\n    let result;\n    try {\n      const updatedData = data.slice(1).slice(-50);\n      result = updatedData.map((dataItem) => {\n        let newObject = {};\n        for (let [key, value] of Object.entries(dataItem)) {\n          if (key === \"date\") {\n            newObject[key] = value;\n          } else {\n            newObject[key] = Number(value);\n          }\n        }\n        return {\n          ...newObject,\n          totalactive:\n            newObject.totalconfirmed -\n            (newObject.totalrecovered + newObject.totaldeceased),\n        };\n      });\n    } catch (err) { }\n\n    return (\n      <div className=\"barcharts\">\n        {!isLoading && (\n          <BarChart\n            width={350}\n            height={150}\n            data={result}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n          >\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey={dataKey} fill={stroke} />\n          </BarChart>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}