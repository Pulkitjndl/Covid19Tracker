{"ast":null,"code":"import _objectSpread from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Bar,BarChart,Tooltip,XAxis,YAxis}from\"recharts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Barchart=/*#__PURE__*/function(_Component){_inherits(Barchart,_Component);var _super=_createSuper(Barchart);function Barchart(){_classCallCheck(this,Barchart);return _super.apply(this,arguments);}_createClass(Barchart,[{key:\"render\",value:function render(){var _this$props=this.props,data=_this$props.data,isLoading=_this$props.isLoading,dataKey=_this$props.dataKey,stroke=_this$props.stroke;var result;try{var updatedData=data.slice(1).slice(-50);result=updatedData.map(function(dataItem){var newObject={};for(var _i=0,_Object$entries=Object.entries(dataItem);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(key===\"date\"){newObject[key]=value;}else{newObject[key]=Number(value);}}return _objectSpread(_objectSpread({},newObject),{},{totalactive:newObject.totalconfirmed-(newObject.totalrecovered+newObject.totaldeceased)});});}catch(err){}return/*#__PURE__*/_jsx(\"div\",{className:\"barcharts\",children:!isLoading&&/*#__PURE__*/_jsxs(BarChart,{width:350,height:150,data:result,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:dataKey,fill:stroke})]})});}}]);return Barchart;}(Component);export{Barchart as default};","map":{"version":3,"sources":["D:/heynode/COVID19-Tracker-master/src/components/Barchart.js"],"names":["React","Component","Bar","BarChart","Tooltip","XAxis","YAxis","Barchart","props","data","isLoading","dataKey","stroke","result","updatedData","slice","map","dataItem","newObject","Object","entries","key","value","Number","totalactive","totalconfirmed","totalrecovered","totaldeceased","err","top","right","left","bottom"],"mappings":"uqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,CAAcC,QAAd,CAAwBC,OAAxB,CAAiCC,KAAjC,CAAwCC,KAAxC,KAAqD,UAArD,C,2FAEqBC,CAAAA,Q,uOACnB,iBAAS,iBACsC,KAAKC,KAD3C,CACCC,IADD,aACCA,IADD,CACOC,SADP,aACOA,SADP,CACkBC,OADlB,aACkBA,OADlB,CAC2BC,MAD3B,aAC2BA,MAD3B,CAEP,GAAIC,CAAAA,MAAJ,CACA,GAAI,CACF,GAAMC,CAAAA,WAAW,CAAGL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAAC,EAArB,CAApB,CACAF,MAAM,CAAGC,WAAW,CAACE,GAAZ,CAAgB,SAACC,QAAD,CAAc,CACrC,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,6BAAyBC,MAAM,CAACC,OAAP,CAAeH,QAAf,CAAzB,gCAAmD,8DAAzCI,GAAyC,uBAApCC,KAAoC,uBACjD,GAAID,GAAG,GAAK,MAAZ,CAAoB,CAClBH,SAAS,CAACG,GAAD,CAAT,CAAiBC,KAAjB,CACD,CAFD,IAEO,CACLJ,SAAS,CAACG,GAAD,CAAT,CAAiBE,MAAM,CAACD,KAAD,CAAvB,CACD,CACF,CACD,sCACKJ,SADL,MAEEM,WAAW,CACTN,SAAS,CAACO,cAAV,EACCP,SAAS,CAACQ,cAAV,CAA2BR,SAAS,CAACS,aADtC,CAHJ,GAMD,CAfQ,CAAT,CAgBD,CAAC,MAAOC,GAAP,CAAY,CAAG,CAEjB,mBACE,YAAK,SAAS,CAAC,WAAf,UACG,CAAClB,SAAD,eACC,MAAC,QAAD,EACE,KAAK,CAAE,GADT,CAEE,MAAM,CAAE,GAFV,CAGE,IAAI,CAAEG,MAHR,CAIE,MAAM,CAAE,CAAEgB,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,EAAjB,CAAqBC,IAAI,CAAE,EAA3B,CAA+BC,MAAM,CAAE,CAAvC,CAJV,wBAME,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EANF,cAOE,KAAC,KAAD,IAPF,cAQE,KAAC,OAAD,IARF,cASE,KAAC,GAAD,EAAK,OAAO,CAAErB,OAAd,CAAuB,IAAI,CAAEC,MAA7B,EATF,GAFJ,EADF,CAiBD,C,sBAzCmCX,S,SAAjBM,Q","sourcesContent":["import React, { Component } from \"react\";\nimport { Bar, BarChart, Tooltip, XAxis, YAxis } from \"recharts\";\n\nexport default class Barchart extends Component {\n  render() {\n    const { data, isLoading, dataKey, stroke } = this.props;\n    let result;\n    try {\n      const updatedData = data.slice(1).slice(-50);\n      result = updatedData.map((dataItem) => {\n        let newObject = {};\n        for (let [key, value] of Object.entries(dataItem)) {\n          if (key === \"date\") {\n            newObject[key] = value;\n          } else {\n            newObject[key] = Number(value);\n          }\n        }\n        return {\n          ...newObject,\n          totalactive:\n            newObject.totalconfirmed -\n            (newObject.totalrecovered + newObject.totaldeceased),\n        };\n      });\n    } catch (err) { }\n\n    return (\n      <div className=\"barcharts\">\n        {!isLoading && (\n          <BarChart\n            width={350}\n            height={150}\n            data={result}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n          >\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey={dataKey} fill={stroke} />\n          </BarChart>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}