{"ast":null,"code":"var _jsxFileName = \"D:\\\\heynode\\\\COVID19-Tracker-master\\\\src\\\\components\\\\MapSection.js\";\nimport { withStyles } from \"@material-ui/styles\";\nimport React, { Component } from \"react\";\nimport styles from \"../styles/MapSection\";\nimport DisplayPanels from \"./DisplayPanels\";\nimport Map from \"./Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MapSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      confirmed: \"-\",\n      deaths: \"-\",\n      recovered: \"-\",\n      active: \"-\"\n    };\n    this.currentLocation = this.currentLocation.bind(this);\n  }\n\n  currentLocation(location) {\n    const stateName = location.replace(\" & \", \" and \");\n    const [updatedData] = this.props.data.filter(el => el.state === stateName);\n\n    try {\n      this.setState({ ...updatedData,\n        deltaactive: Number(updatedData.deltaconfirmed) - (Number(updatedData.deltarecovered) + Number(updatedData.deltadeaths))\n      });\n    } catch (error) {}\n  }\n\n  render() {\n    const {\n      classes,\n      mapData,\n      isDarkMode\n    } = this.props;\n    const {\n      confirmed,\n      deaths,\n      recovered,\n      active,\n      state,\n      deltaconfirmed,\n      deltadeaths,\n      deltarecovered,\n      deltaactive\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: classes.heading,\n        children: [\"State/UT: \", state]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.para,\n        children: \"hover over the states in the map to view the stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.panelsContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.singlePanel,\n            children: /*#__PURE__*/_jsxDEV(DisplayPanels, {\n              title: \"Confirmed\",\n              number: confirmed,\n              isDarkMode: isDarkMode,\n              dataChange: deltaconfirmed,\n              isMiniPanel: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.singlePanel,\n            children: /*#__PURE__*/_jsxDEV(DisplayPanels, {\n              title: \"Active\",\n              number: active,\n              isDarkMode: isDarkMode,\n              dataChange: deltaactive,\n              isMiniPanel: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.singlePanel,\n            children: /*#__PURE__*/_jsxDEV(DisplayPanels, {\n              title: \"Recovered\",\n              number: recovered,\n              isDarkMode: isDarkMode,\n              dataChange: deltarecovered,\n              isMiniPanel: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.singlePanel,\n            children: /*#__PURE__*/_jsxDEV(DisplayPanels, {\n              title: \"Deceased\",\n              number: deaths,\n              isDarkMode: isDarkMode,\n              dataChange: deltadeaths,\n              isMiniPanel: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.mapContainer,\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            mapData: mapData,\n            currentLocation: this.currentLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(MapSection);","map":{"version":3,"sources":["D:/heynode/COVID19-Tracker-master/src/components/MapSection.js"],"names":["withStyles","React","Component","styles","DisplayPanels","Map","MapSection","constructor","props","state","title","confirmed","deaths","recovered","active","currentLocation","bind","location","stateName","replace","updatedData","data","filter","el","setState","deltaactive","Number","deltaconfirmed","deltarecovered","deltadeaths","error","render","classes","mapData","isDarkMode","mainContainer","heading","para","container","panelsContainer","singlePanel","mapContainer"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/styles\";\nimport React, { Component } from \"react\";\nimport styles from \"../styles/MapSection\";\nimport DisplayPanels from \"./DisplayPanels\";\nimport Map from \"./Map\";\n\nclass MapSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      confirmed: \"-\",\n      deaths: \"-\",\n      recovered: \"-\",\n      active: \"-\",\n    };\n    this.currentLocation = this.currentLocation.bind(this);\n  }\n\n  currentLocation(location) {\n    const stateName = location.replace(\" & \", \" and \");\n\n    const [updatedData] = this.props.data.filter(\n      (el) => el.state === stateName\n    );\n\n    try {\n      this.setState({\n        ...updatedData,\n        deltaactive:\n          Number(updatedData.deltaconfirmed) -\n          (Number(updatedData.deltarecovered) +\n            Number(updatedData.deltadeaths)),\n      });\n    } catch (error) { }\n  }\n\n  render() {\n    const { classes, mapData, isDarkMode } = this.props;\n    const {\n      confirmed,\n      deaths,\n      recovered,\n      active,\n      state,\n      deltaconfirmed,\n      deltadeaths,\n      deltarecovered,\n      deltaactive,\n    } = this.state;\n\n    return (\n      <div className={classes.mainContainer}>\n        <h4 className={classes.heading}>State/UT: {state}</h4>\n        <p className={classes.para}>\n          hover over the states in the map to view the stats\n        </p>\n        <div className={classes.container}>\n          <div className={classes.panelsContainer}>\n            <div className={classes.singlePanel}>\n              <DisplayPanels\n                title=\"Confirmed\"\n                number={confirmed}\n                isDarkMode={isDarkMode}\n                dataChange={deltaconfirmed}\n                isMiniPanel={true}\n              />\n            </div>\n            <div className={classes.singlePanel}>\n              <DisplayPanels\n                title=\"Active\"\n                number={active}\n                isDarkMode={isDarkMode}\n                dataChange={deltaactive}\n                isMiniPanel={true}\n              />\n            </div>\n            <div className={classes.singlePanel}>\n              <DisplayPanels\n                title=\"Recovered\"\n                number={recovered}\n                isDarkMode={isDarkMode}\n                dataChange={deltarecovered}\n                isMiniPanel={true}\n              />\n            </div>\n            <div className={classes.singlePanel}>\n              <DisplayPanels\n                title=\"Deceased\"\n                number={deaths}\n                isDarkMode={isDarkMode}\n                dataChange={deltadeaths}\n                isMiniPanel={true}\n              />\n            </div>\n          </div>\n          <div className={classes.mapContainer}>\n            <Map mapData={mapData} currentLocation={this.currentLocation} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MapSection);\n"]},"metadata":{},"sourceType":"module"}