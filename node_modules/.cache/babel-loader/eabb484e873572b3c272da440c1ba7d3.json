{"ast":null,"code":"import _classCallCheck from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/createSuper\";import{withStyles}from\"@material-ui/styles\";import{scaleQuantile}from\"d3-scale\";import React,{Component}from\"react\";import{ComposableMap,Geographies,Geography}from\"react-simple-maps\";import ReactTooltip from\"react-tooltip\";import INDIA_TOPO_JSON from\"../constants/india.topo.json\";import styles from'../styles/MapStyles';import\"../styles/MapStyles.js\";import LinearGradient from\"./LinearGradient.js\";/**\n * Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\n * Looking topojson for other countries/world?\n * Visit: https://github.com/markmarkoh/datamaps\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PROJECTION_CONFIG={scale:350,center:[78.9629,22.5937]// always in [East Latitude, North Longitude]\n};// Red Variants\nvar COLOR_RANGE=[\"#ffedea\",\"#ffcec5\",\"#ffdec5\",\"#ffad9f\",\"#ff8a75\",\"#ff5533\",\"#e2492d\",\"#be3d26\",\"#9a311f\",\"#782618\"];var DEFAULT_COLOR=\"#EEE\";var geographyStyle={default:{outline:\"none\"},hover:{fill:\"#ccc\",transition:\"all 250ms\",outline:\"none\"},pressed:{outline:\"none\"}};var Map=/*#__PURE__*/function(_Component){_inherits(Map,_Component);var _super=_createSuper(Map);function Map(props){var _this;_classCallCheck(this,Map);_this=_super.call(this,props);_this.onMouseEnter=function(geo){var current=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{value:\"NA\"};return function(){_this.setState({tooltipContent:\"\".concat(geo.properties.name,\": \").concat(current.value)},function(){return _this.props.currentLocation(geo.properties.name);});};};_this.onMouseLeave=function(){_this.setState({tooltipContent:\"\"});};_this.state={tooltipContent:\"\",data:[{id:\"AP\",state:\"Andhra Pradesh\",value:5},{id:\"AR\",state:\"Arunachal Pradesh\",value:2}]};return _this;}_createClass(Map,[{key:\"render\",value:function render(){var _this2=this;var data=this.props.mapData;var gradientData={fromColor:COLOR_RANGE[0],toColor:COLOR_RANGE[COLOR_RANGE.length-1],min:0,max:data.reduce(function(max,item){return item.value>max?item.value:max;},0)};var colorScale=scaleQuantile().domain(data.map(function(d){return d.value;})).range(COLOR_RANGE);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ReactTooltip,{children:this.state.tooltipContent}),/*#__PURE__*/_jsx(ComposableMap,{projectionConfig:PROJECTION_CONFIG,projection:\"geoMercator\",width:600,height:220,\"data-tip\":\"\",children:/*#__PURE__*/_jsx(Geographies,{geography:INDIA_TOPO_JSON,children:function children(_ref){var geographies=_ref.geographies;return geographies.map(function(geo){var current=data.find(function(s){return s.id===geo.id;});return/*#__PURE__*/_jsx(Geography,{geography:geo,fill:current?colorScale(current.value):DEFAULT_COLOR,style:geographyStyle,onMouseEnter:_this2.onMouseEnter(geo,current),onMouseLeave:_this2.onMouseLeave},geo.rsmKey);});}})}),/*#__PURE__*/_jsx(LinearGradient,{data:gradientData})]});}}]);return Map;}(Component);export default withStyles(styles)(Map);","map":{"version":3,"sources":["D:/heynode/COVID19-Tracker-master/src/components/Map.js"],"names":["withStyles","scaleQuantile","React","Component","ComposableMap","Geographies","Geography","ReactTooltip","INDIA_TOPO_JSON","styles","LinearGradient","PROJECTION_CONFIG","scale","center","COLOR_RANGE","DEFAULT_COLOR","geographyStyle","default","outline","hover","fill","transition","pressed","Map","props","onMouseEnter","geo","current","value","setState","tooltipContent","properties","name","currentLocation","onMouseLeave","state","data","id","mapData","gradientData","fromColor","toColor","length","min","max","reduce","item","colorScale","domain","map","d","range","geographies","find","s","rsmKey"],"mappings":"gcAAA,OAASA,UAAT,KAA2B,qBAA3B,CACA,OAASC,aAAT,KAA8B,UAA9B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,aAAT,CAAwBC,WAAxB,CAAqCC,SAArC,KAAsD,mBAAtD,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CAEA;AACA;AACA;AACA;AACA,G,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,KAAK,CAAE,GADiB,CAExBC,MAAM,CAAE,CAAC,OAAD,CAAU,OAAV,CAAoB;AAFJ,CAA1B,CAKA;AACA,GAAMC,CAAAA,WAAW,CAAG,CAClB,SADkB,CAElB,SAFkB,CAGlB,SAHkB,CAIlB,SAJkB,CAKlB,SALkB,CAMlB,SANkB,CAOlB,SAPkB,CAQlB,SARkB,CASlB,SATkB,CAUlB,SAVkB,CAApB,CAaA,GAAMC,CAAAA,aAAa,CAAG,MAAtB,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,OAAO,CAAE,CACPC,OAAO,CAAE,MADF,CADY,CAIrBC,KAAK,CAAE,CACLC,IAAI,CAAE,MADD,CAELC,UAAU,CAAE,WAFP,CAGLH,OAAO,CAAE,MAHJ,CAJc,CASrBI,OAAO,CAAE,CACPJ,OAAO,CAAE,MADF,CATY,CAAvB,C,GAcMK,CAAAA,G,0FACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MAWnBC,YAXmB,CAWJ,SAACC,GAAD,CAAoC,IAA9BC,CAAAA,OAA8B,2DAApB,CAAEC,KAAK,CAAE,IAAT,CAAoB,CACjD,MAAO,WAAM,CACX,MAAKC,QAAL,CACE,CACEC,cAAc,WAAKJ,GAAG,CAACK,UAAJ,CAAeC,IAApB,cAA6BL,OAAO,CAACC,KAArC,CADhB,CADF,CAIE,iBAAM,OAAKJ,KAAL,CAAWS,eAAX,CAA2BP,GAAG,CAACK,UAAJ,CAAeC,IAA1C,CAAN,EAJF,EAMD,CAPD,CAQD,CApBkB,OAsBnBE,YAtBmB,CAsBJ,UAAM,CACnB,MAAKL,QAAL,CAAc,CAAEC,cAAc,CAAE,EAAlB,CAAd,EACD,CAxBkB,CAEjB,MAAKK,KAAL,CAAa,CACXL,cAAc,CAAE,EADL,CAEXM,IAAI,CAAE,CACJ,CAAEC,EAAE,CAAE,IAAN,CAAYF,KAAK,CAAE,gBAAnB,CAAqCP,KAAK,CAAE,CAA5C,CADI,CAEJ,CAAES,EAAE,CAAE,IAAN,CAAYF,KAAK,CAAE,mBAAnB,CAAwCP,KAAK,CAAE,CAA/C,CAFI,CAFK,CAAb,CAFiB,aASlB,C,sCAiBD,iBAAS,iBACP,GAAMQ,CAAAA,IAAI,CAAG,KAAKZ,KAAL,CAAWc,OAAxB,CACA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE1B,WAAW,CAAC,CAAD,CADH,CAEnB2B,OAAO,CAAE3B,WAAW,CAACA,WAAW,CAAC4B,MAAZ,CAAqB,CAAtB,CAFD,CAGnBC,GAAG,CAAE,CAHc,CAInBC,GAAG,CAAER,IAAI,CAACS,MAAL,CAAY,SAACD,GAAD,CAAME,IAAN,QAAgBA,CAAAA,IAAI,CAAClB,KAAL,CAAagB,GAAb,CAAmBE,IAAI,CAAClB,KAAxB,CAAgCgB,GAAhD,EAAZ,CAAkE,CAAlE,CAJc,CAArB,CAOA,GAAMG,CAAAA,UAAU,CAAG9C,aAAa,GAC7B+C,MADgB,CACTZ,IAAI,CAACa,GAAL,CAAS,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACtB,KAAT,EAAT,CADS,EAEhBuB,KAFgB,CAEVrC,WAFU,CAAnB,CAIA,mBACE,oCACE,KAAC,YAAD,WAAe,KAAKqB,KAAL,CAAWL,cAA1B,EADF,cAEE,KAAC,aAAD,EACE,gBAAgB,CAAEnB,iBADpB,CAEE,UAAU,CAAC,aAFb,CAGE,KAAK,CAAE,GAHT,CAIE,MAAM,CAAE,GAJV,CAKE,WAAS,EALX,uBAOE,KAAC,WAAD,EAAa,SAAS,CAAEH,eAAxB,UACG,2BAAG4C,CAAAA,WAAH,MAAGA,WAAH,OACCA,CAAAA,WAAW,CAACH,GAAZ,CAAgB,SAACvB,GAAD,CAAS,CACvB,GAAMC,CAAAA,OAAO,CAAGS,IAAI,CAACiB,IAAL,CAAU,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACjB,EAAF,GAASX,GAAG,CAACW,EAApB,EAAV,CAAhB,CACA,mBACE,KAAC,SAAD,EAEE,SAAS,CAAEX,GAFb,CAGE,IAAI,CAAEC,OAAO,CAAGoB,UAAU,CAACpB,OAAO,CAACC,KAAT,CAAb,CAA+Bb,aAH9C,CAIE,KAAK,CAAEC,cAJT,CAKE,YAAY,CAAE,MAAI,CAACS,YAAL,CAAkBC,GAAlB,CAAuBC,OAAvB,CALhB,CAME,YAAY,CAAE,MAAI,CAACO,YANrB,EACOR,GAAG,CAAC6B,MADX,CADF,CAUD,CAZD,CADD,EADH,EAPF,EAFF,cA2BE,KAAC,cAAD,EAAgB,IAAI,CAAEhB,YAAtB,EA3BF,GADF,CA+BD,C,iBAvEepC,S,EA0ElB,cAAeH,CAAAA,UAAU,CAACS,MAAD,CAAV,CAAmBc,GAAnB,CAAf","sourcesContent":["import { withStyles } from \"@material-ui/styles\";\nimport { scaleQuantile } from \"d3-scale\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport INDIA_TOPO_JSON from \"../constants/india.topo.json\";\nimport styles from '../styles/MapStyles';\nimport \"../styles/MapStyles.js\";\nimport LinearGradient from \"./LinearGradient.js\";\n\n/**\n * Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\n * Looking topojson for other countries/world?\n * Visit: https://github.com/markmarkoh/datamaps\n */\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\n};\n\n// Red Variants\nconst COLOR_RANGE = [\n  \"#ffedea\",\n  \"#ffcec5\",\n  \"#ffdec5\",\n  \"#ffad9f\",\n  \"#ff8a75\",\n  \"#ff5533\",\n  \"#e2492d\",\n  \"#be3d26\",\n  \"#9a311f\",\n  \"#782618\",\n];\n\nconst DEFAULT_COLOR = \"#EEE\";\n\nconst geographyStyle = {\n  default: {\n    outline: \"none\",\n  },\n  hover: {\n    fill: \"#ccc\",\n    transition: \"all 250ms\",\n    outline: \"none\",\n  },\n  pressed: {\n    outline: \"none\",\n  },\n};\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipContent: \"\",\n      data: [\n        { id: \"AP\", state: \"Andhra Pradesh\", value: 5 },\n        { id: \"AR\", state: \"Arunachal Pradesh\", value: 2 },\n      ],\n    };\n  }\n\n  onMouseEnter = (geo, current = { value: \"NA\" }) => {\n    return () => {\n      this.setState(\n        {\n          tooltipContent: `${geo.properties.name}: ${current.value}`,\n        },\n        () => this.props.currentLocation(geo.properties.name)\n      );\n    };\n  };\n\n  onMouseLeave = () => {\n    this.setState({ tooltipContent: \"\" });\n  };\n\n  render() {\n    const data = this.props.mapData;\n    const gradientData = {\n      fromColor: COLOR_RANGE[0],\n      toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\n      min: 0,\n      max: data.reduce((max, item) => (item.value > max ? item.value : max), 0),\n    };\n\n    const colorScale = scaleQuantile()\n      .domain(data.map((d) => d.value))\n      .range(COLOR_RANGE);\n\n    return (\n      <div>\n        <ReactTooltip>{this.state.tooltipContent}</ReactTooltip>\n        <ComposableMap\n          projectionConfig={PROJECTION_CONFIG}\n          projection=\"geoMercator\"\n          width={600}\n          height={220}\n          data-tip=\"\"\n        >\n          <Geographies geography={INDIA_TOPO_JSON}>\n            {({ geographies }) =>\n              geographies.map((geo) => {\n                const current = data.find((s) => s.id === geo.id);\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n                    style={geographyStyle}\n                    onMouseEnter={this.onMouseEnter(geo, current)}\n                    onMouseLeave={this.onMouseLeave}\n                  />\n                );\n              })\n            }\n          </Geographies>\n        </ComposableMap>\n        <LinearGradient data={gradientData} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Map);\n"]},"metadata":{},"sourceType":"module"}