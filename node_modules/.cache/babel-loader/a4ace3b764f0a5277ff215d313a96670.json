{"ast":null,"code":"var _jsxFileName = \"D:\\\\heynode\\\\COVID19-Tracker-master\\\\src\\\\components\\\\CovidApp.js\";\nimport { faBell, faBellSlash, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport { formatDistance } from \"date-fns\";\nimport React, { Component } from \"react\";\nimport Lottie from \"react-lottie\";\nimport * as animationData from \"../assets/loading.json\";\nimport colors from \"../constants/colors\";\nimport stateCodes from \"../constants/stateCodes\";\nimport styles from \"../styles/CovidAppStyles\";\nimport \"../styles/DarkModeButton.css\";\nimport Barchart from \"./Barchart\";\nimport Charts from \"./Charts\";\nimport DisplayTable from \"./DisplayTable\";\nimport Footer from \"./Footer\";\nimport MapSection from \"./MapSection\";\nimport Overview from \"./Overview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\nconst months = {\n  \"01\": \"Jan\",\n  \"02\": \"Feb\",\n  \"03\": \"Mar\",\n  \"04\": \"Apr\",\n  \"05\": \"May\",\n  \"06\": \"Jun\",\n  \"07\": \"Jul\",\n  \"08\": \"Aug\",\n  \"09\": \"Sep\",\n  \"10\": \"Oct\",\n  \"11\": \"Nov\",\n  \"12\": \"Dec\"\n};\n\nclass CovidApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      todayData: {},\n      isLoading: false,\n      mapData: [],\n      tableData: []\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.formatData = this.formatData.bind(this);\n    this.findId = this.findId.bind(this);\n    this.handleFormat = this.handleFormat.bind(this);\n    this.handleNotification = this.handleNotification.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    this.setState({\n      isLoading: !this.state.isLoading\n    });\n    const countryData = axios.get(\"https://api.covid19india.org/data.json\");\n    const districtLevel = axios.get(\"https://api.covid19india.org/v2/state_district_wise.json\");\n    const stateChanges = axios.get(\"https://api.covid19india.org/states_daily.json\");\n    const updates = axios.get(\"https://api.covid19india.org/updatelog/log.json\");\n    axios.all([countryData, districtLevel, stateChanges, updates]).then(axios.spread((...responses) => {\n      const countryData = responses[0].data;\n      const districtLevel = responses[1].data;\n      const updates = responses[3].data;\n      const [todayData] = countryData.statewise.slice(0, 1);\n      const casesTimeline = countryData.cases_time_series;\n      const data = countryData.statewise.slice(1, -1);\n      this.setState({\n        data: data,\n        todayData: todayData,\n        casesTimeline: casesTimeline,\n        districtLevel: districtLevel,\n        updates: updates,\n        expanded: false\n      }, this.handleFormat);\n    }));\n  }\n\n  formatData(data) {\n    const formatedData = data.map((state, i) => {\n      return {\n        id: this.findId(state.state),\n        state: state.state.replace(\" and \", \" & \"),\n        value: state.confirmed\n      };\n    });\n    return formatedData;\n  }\n\n  findId(location) {\n    for (let [key, value] of Object.entries(stateCodes)) {\n      if (location === key) {\n        return value;\n      }\n    }\n  }\n\n  handleFormat() {\n    const newdata = this.formatData(this.state.data);\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      });\n    }, 1000);\n    this.setState({\n      mapData: newdata\n    });\n  }\n\n  handleNotification() {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n  }\n\n  formatDate(date) {\n    try {\n      const day = date.slice(0, 2);\n      const month = date.slice(3, 5);\n      const time = date.slice(11);\n      return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n    } catch (err) {}\n  }\n\n  render() {\n    const {\n      classes,\n      setDarkMode,\n      isDarkMode\n    } = this.props;\n    const {\n      mapData,\n      isLoading,\n      data,\n      districtLevel,\n      expanded,\n      updates\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loadingIcon,\n        children: /*#__PURE__*/_jsxDEV(Lottie, {\n          options: defaultOptions,\n          height: 500,\n          width: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this);\n    }\n\n    let displayUpdates;\n\n    try {\n      displayUpdates = updates.slice(-5).reverse().map(({\n        update,\n        timestamp\n      }, i) => {\n        update = update.replace(\"\\n\", \"<br/>\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.updateBox,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: classes.updateHeading,\n            children: `${formatDistance(new Date(timestamp * 1000), new Date())} ago`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.updateText,\n            dangerouslySetInnerHTML: {\n              __html: update\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this);\n      });\n    } catch (err) {}\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Covid-19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), \" India Trend\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.btnBox,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSyncAlt,\n            className: classes.button,\n            onClick: this.fetchData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.lastUpdatedTime,\n          children: [\"Last Updated:\", \" \", this.formatDate(this.state.todayData.lastupdatedtime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.updates,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.notification,\n            children: expanded ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faBellSlash,\n              onClick: this.handleNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.notificationBell,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faBell,\n                onClick: this.handleNotification\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.update,\n            children: displayUpdates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"darkModeButton\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: setDarkMode,\n              checked: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Overview, {\n          isDarkMode: isDarkMode,\n          data: this.state.todayData,\n          loadingStatus: this.loadingStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.contentArea,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.mapArea,\n            children: /*#__PURE__*/_jsxDEV(MapSection, {\n              data: data,\n              mapData: mapData,\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chartArea,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chartRes,\n            children: /*#__PURE__*/_jsxDEV(Charts, {\n              data: this.state.casesTimeline,\n              isLoading: this.state.isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.tinyChartArea,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.tinyChart,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.tinych,\n                style: {\n                  background: \"rgba(249, 52, 94,.1)\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    color: colors.red\n                  },\n                  children: \"confirmed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Barchart, {\n                  data: this.state.casesTimeline,\n                  isLoading: this.state.isLoading,\n                  dataKey: \"totalconfirmed\",\n                  stroke: colors.red\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.tinyChart,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.tinych,\n                style: {\n                  background: \"rgba(250, 100, 0,.1)\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    color: colors.orange\n                  },\n                  children: \"active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Barchart, {\n                  data: this.state.casesTimeline,\n                  isLoading: this.state.isLoading,\n                  dataKey: \"totalactive\",\n                  stroke: colors.orange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.tinyChart,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.tinych,\n                style: {\n                  background: \"rgba(28, 177, 66,.1)\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    color: colors.green\n                  },\n                  children: \"Recovered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Barchart, {\n                  data: this.state.casesTimeline,\n                  isLoading: this.state.isLoading,\n                  dataKey: \"totalrecovered\",\n                  stroke: colors.green\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.tinyChart,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.tinych,\n                style: {\n                  background: \"rgba(98, 54, 255,.1)\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    color: colors.purple\n                  },\n                  children: \"Deceased\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Barchart, {\n                  data: this.state.casesTimeline,\n                  isLoading: this.state.isLoading,\n                  dataKey: \"totaldeceased\",\n                  stroke: colors.purple\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tableContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default withStyles(styles)(CovidApp);","map":{"version":3,"sources":["D:/heynode/COVID19-Tracker-master/src/components/CovidApp.js"],"names":["faBell","faBellSlash","faSyncAlt","FontAwesomeIcon","withStyles","axios","formatDistance","React","Component","Lottie","animationData","colors","stateCodes","styles","Barchart","Charts","DisplayTable","Footer","MapSection","Overview","defaultOptions","loop","autoplay","default","rendererSettings","preserveAspectRatio","months","CovidApp","constructor","props","state","data","todayData","isLoading","mapData","tableData","fetchData","bind","formatData","findId","handleFormat","handleNotification","componentDidMount","setState","countryData","get","districtLevel","stateChanges","updates","all","then","spread","responses","statewise","slice","casesTimeline","cases_time_series","expanded","formatedData","map","i","id","replace","value","confirmed","location","key","Object","entries","newdata","setTimeout","formatDate","date","day","month","time","err","render","classes","setDarkMode","isDarkMode","loadingIcon","displayUpdates","reverse","update","timestamp","updateBox","updateHeading","Date","updateText","__html","header","heading","btnBox","button","lastUpdatedTime","lastupdatedtime","notification","notificationBell","loadingStatus","content","contentArea","mapArea","chartArea","chartRes","tinyChartArea","tinyChart","tinych","background","color","red","orange","green","purple","tableContainer"],"mappings":"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","sourcesContent":["import {\n  faBell,\n  faBellSlash,\n  faSyncAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport { formatDistance } from \"date-fns\";\nimport React, { Component } from \"react\";\nimport Lottie from \"react-lottie\";\nimport * as animationData from \"../assets/loading.json\";\nimport colors from \"../constants/colors\";\nimport stateCodes from \"../constants/stateCodes\";\nimport styles from \"../styles/CovidAppStyles\";\nimport \"../styles/DarkModeButton.css\";\nimport Barchart from \"./Barchart\";\nimport Charts from \"./Charts\";\nimport DisplayTable from \"./DisplayTable\";\nimport Footer from \"./Footer\";\nimport MapSection from \"./MapSection\";\nimport Overview from \"./Overview\";\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n};\n\nconst months = {\n  \"01\": \"Jan\",\n  \"02\": \"Feb\",\n  \"03\": \"Mar\",\n  \"04\": \"Apr\",\n  \"05\": \"May\",\n  \"06\": \"Jun\",\n  \"07\": \"Jul\",\n  \"08\": \"Aug\",\n  \"09\": \"Sep\",\n  \"10\": \"Oct\",\n  \"11\": \"Nov\",\n  \"12\": \"Dec\",\n};\n\nclass CovidApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      todayData: {},\n      isLoading: false,\n      mapData: [],\n      tableData: [],\n    };\n\n    this.fetchData = this.fetchData.bind(this);\n    this.formatData = this.formatData.bind(this);\n    this.findId = this.findId.bind(this);\n    this.handleFormat = this.handleFormat.bind(this);\n    this.handleNotification = this.handleNotification.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    this.setState({ isLoading: !this.state.isLoading });\n    const countryData = axios.get(\"https://api.covid19india.org/data.json\");\n    const districtLevel = axios.get(\n      \"https://api.covid19india.org/v2/state_district_wise.json\"\n    );\n    const stateChanges = axios.get(\n      \"https://api.covid19india.org/states_daily.json\"\n    );\n    const updates = axios.get(\n      \"https://api.covid19india.org/updatelog/log.json\"\n    );\n\n    axios.all([countryData, districtLevel, stateChanges, updates]).then(\n      axios.spread((...responses) => {\n        const countryData = responses[0].data;\n        const districtLevel = responses[1].data;\n        const updates = responses[3].data;\n\n        const [todayData] = countryData.statewise.slice(0, 1);\n        const casesTimeline = countryData.cases_time_series;\n\n        const data = countryData.statewise.slice(1, -1);\n\n        this.setState(\n          {\n            data: data,\n            todayData: todayData,\n            casesTimeline: casesTimeline,\n            districtLevel: districtLevel,\n            updates: updates,\n            expanded: false,\n          },\n          this.handleFormat\n        );\n      })\n    );\n  }\n\n  formatData(data) {\n    const formatedData = data.map((state, i) => {\n      return {\n        id: this.findId(state.state),\n        state: state.state.replace(\" and \", \" & \"),\n        value: state.confirmed,\n      };\n    });\n    return formatedData;\n  }\n\n  findId(location) {\n    for (let [key, value] of Object.entries(stateCodes)) {\n      if (location === key) {\n        return value;\n      }\n    }\n  }\n\n  handleFormat() {\n    const newdata = this.formatData(this.state.data);\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 1000);\n    this.setState({ mapData: newdata });\n  }\n\n  handleNotification() {\n    this.setState({ expanded: !this.state.expanded });\n  }\n\n  formatDate(date) {\n    try {\n      const day = date.slice(0, 2);\n      const month = date.slice(3, 5);\n      const time = date.slice(11);\n      return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n    } catch (err) { }\n  }\n\n  render() {\n    const { classes, setDarkMode, isDarkMode } = this.props;\n    const {\n      mapData,\n      isLoading,\n      data,\n      districtLevel,\n      expanded,\n      updates,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className={classes.loadingIcon}>\n          <Lottie options={defaultOptions} height={500} width={500} />\n        </div>\n      );\n    }\n    let displayUpdates;\n    try {\n      displayUpdates = updates\n        .slice(-5)\n        .reverse()\n        .map(({ update, timestamp }, i) => {\n          update = update.replace(\"\\n\", \"<br/>\");\n          return (\n            <div className={classes.updateBox} key={i}>\n              <h5 className={classes.updateHeading}>\n                {`${formatDistance(\n                  new Date(timestamp * 1000),\n                  new Date()\n                )} ago`}\n              </h5>\n              <h4\n                className={classes.updateText}\n                dangerouslySetInnerHTML={{\n                  __html: update,\n                }}\n              ></h4>\n            </div>\n          );\n        });\n    } catch (err) { }\n\n    return (\n      <>\n        <div className={classes.header}>\n          <h1 className={classes.heading}>\n            <span>Covid-19</span> India Trend\n          </h1>\n          <div className={classes.btnBox}>\n            <FontAwesomeIcon\n              icon={faSyncAlt}\n              className={classes.button}\n              onClick={this.fetchData}\n            />\n          </div>\n          <div className={classes.lastUpdatedTime}>\n            Last Updated:{\" \"}\n            {this.formatDate(this.state.todayData.lastupdatedtime)}\n          </div>\n          <div className={classes.updates}>\n            <div className={classes.notification}>\n              {expanded ? (\n                <FontAwesomeIcon\n                  icon={faBellSlash}\n                  onClick={this.handleNotification}\n                />\n              ) : (\n                  <div className={classes.notificationBell}>\n                    <FontAwesomeIcon\n                      icon={faBell}\n                      onClick={this.handleNotification}\n                    />\n                  </div>\n                )}\n            </div>\n            {expanded && <div className={classes.update}>{displayUpdates}</div>}\n          </div>\n          <div className=\"darkModeButton\">\n            <label className=\"switch\">\n              <input\n                type=\"checkbox\"\n                onChange={setDarkMode}\n                checked={isDarkMode}\n              />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n        </div>\n        <div>\n          <Overview\n            isDarkMode={isDarkMode}\n            data={this.state.todayData}\n            loadingStatus={this.loadingStatus}\n          />\n        </div>\n        <div className={classes.content}>\n          <div className={classes.contentArea}>\n            <div className={classes.mapArea}>\n              <MapSection\n                data={data}\n                mapData={mapData}\n                isDarkMode={isDarkMode}\n              />\n            </div>\n          </div>\n          <div className={classes.chartArea}>\n            <div className={classes.chartRes}>\n              <Charts\n                data={this.state.casesTimeline}\n                isLoading={this.state.isLoading}\n              />\n            </div>\n            <div className={classes.tinyChartArea}>\n              <div className={classes.tinyChart}>\n                <div\n                  className={classes.tinych}\n                  style={{ background: \"rgba(249, 52, 94,.1)\" }}\n                >\n                  <h3 style={{ color: colors.red }}>confirmed</h3>\n                  <Barchart\n                    data={this.state.casesTimeline}\n                    isLoading={this.state.isLoading}\n                    dataKey=\"totalconfirmed\"\n                    stroke={colors.red}\n                  />\n                </div>\n              </div>\n              <div className={classes.tinyChart}>\n                <div\n                  className={classes.tinych}\n                  style={{ background: \"rgba(250, 100, 0,.1)\" }}\n                >\n                  <h3 style={{ color: colors.orange }}>active</h3>\n                  <Barchart\n                    data={this.state.casesTimeline}\n                    isLoading={this.state.isLoading}\n                    dataKey=\"totalactive\"\n                    stroke={colors.orange}\n                  />\n                </div>\n              </div>\n              <div className={classes.tinyChart}>\n                <div\n                  className={classes.tinych}\n                  style={{ background: \"rgba(28, 177, 66,.1)\" }}\n                >\n                  <h3 style={{ color: colors.green }}>Recovered</h3>\n                  <Barchart\n                    data={this.state.casesTimeline}\n                    isLoading={this.state.isLoading}\n                    dataKey=\"totalrecovered\"\n                    stroke={colors.green}\n                  />\n                </div>\n              </div>\n              <div className={classes.tinyChart}>\n                <div\n                  className={classes.tinych}\n                  style={{ background: \"rgba(98, 54, 255,.1)\" }}\n                >\n                  <h3 style={{ color: colors.purple }}>Deceased</h3>\n                  <Barchart\n                    data={this.state.casesTimeline}\n                    isLoading={this.state.isLoading}\n                    dataKey=\"totaldeceased\"\n                    stroke={colors.purple}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes.tableContainer}>\n            \n          \n          </div>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(CovidApp);\n"]},"metadata":{},"sourceType":"module"}