{"ast":null,"code":"import _objectSpread from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/heynode/COVID19-Tracker-master/node_modules/@babel/runtime/helpers/esm/createSuper\";import{withStyles}from\"@material-ui/styles\";import React,{Component}from\"react\";import{Legend,Line,LineChart,ResponsiveContainer,Tooltip,XAxis,YAxis}from\"recharts\";import colors from\"../constants/colors\";import styles from'../styles/ChartsStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Charts=/*#__PURE__*/function(_Component){_inherits(Charts,_Component);var _super=_createSuper(Charts);function Charts(){_classCallCheck(this,Charts);return _super.apply(this,arguments);}_createClass(Charts,[{key:\"render\",value:function render(){var _this$props=this.props,data=_this$props.data,classes=_this$props.classes;var result;try{var updatedData=data.slice(1).slice(-50);result=updatedData.map(function(dataItem){var newObject={};for(var _i=0,_Object$entries=Object.entries(dataItem);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(key===\"date\"){newObject[key]=value;}else{newObject[key]=Number(value);}}return _objectSpread(_objectSpread({},newObject),{},{totalactive:newObject.totalconfirmed-(newObject.totalrecovered+newObject.totaldeceased)});});}catch(err){}return/*#__PURE__*/_jsx(\"div\",{className:classes.charts,children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(LineChart,{width:600,height:300,data:result,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{wrapperStyle:{margin:\"-3rem 1rem\"}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"totalconfirmed\",stroke:colors.red,dot:false,activeDot:{r:8}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"totalactive\",stroke:colors.orange,dot:false}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"totalrecovered\",stroke:colors.green,dot:false}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"totaldeceased\",stroke:colors.purple,dot:false})]})})});}}]);return Charts;}(Component);export default withStyles(styles)(Charts);","map":{"version":3,"sources":["D:/heynode/COVID19-Tracker-master/src/components/Charts.js"],"names":["withStyles","React","Component","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","colors","styles","Charts","props","data","classes","result","updatedData","slice","map","dataItem","newObject","Object","entries","key","value","Number","totalactive","totalconfirmed","totalrecovered","totaldeceased","err","charts","top","right","left","bottom","margin","red","r","orange","green","purple"],"mappings":"uqBAAA,OAASA,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OACEC,MADF,CACUC,IADV,CACgBC,SADhB,CAC2BC,mBAD3B,CACgDC,OADhD,CACyDC,KADzD,CACgEC,KADhE,KAEO,UAFP,CAGA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,C,2FAEMC,CAAAA,M,6NACJ,iBAAS,iBACmB,KAAKC,KADxB,CACCC,IADD,aACCA,IADD,CACOC,OADP,aACOA,OADP,CAEP,GAAIC,CAAAA,MAAJ,CACA,GAAI,CACF,GAAMC,CAAAA,WAAW,CAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcA,KAAd,CAAoB,CAAC,EAArB,CAApB,CACAF,MAAM,CAAGC,WAAW,CAACE,GAAZ,CAAgB,SAACC,QAAD,CAAc,CACrC,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,6BAAyBC,MAAM,CAACC,OAAP,CAAeH,QAAf,CAAzB,gCAAmD,8DAAzCI,GAAyC,uBAApCC,KAAoC,uBACjD,GAAID,GAAG,GAAK,MAAZ,CAAoB,CAClBH,SAAS,CAACG,GAAD,CAAT,CAAiBC,KAAjB,CACD,CAFD,IAEO,CACLJ,SAAS,CAACG,GAAD,CAAT,CAAiBE,MAAM,CAACD,KAAD,CAAvB,CACD,CACF,CACD,sCACKJ,SADL,MAEEM,WAAW,CACTN,SAAS,CAACO,cAAV,EACCP,SAAS,CAACQ,cAAV,CAA2BR,SAAS,CAACS,aADtC,CAHJ,GAMD,CAfQ,CAAT,CAgBD,CAAC,MAAOC,GAAP,CAAY,CAAG,CAEjB,mBACE,YAAK,SAAS,CAAEhB,OAAO,CAACiB,MAAxB,uBACE,KAAC,mBAAD,wBACE,MAAC,SAAD,EACE,KAAK,CAAE,GADT,CAEE,MAAM,CAAE,GAFV,CAGE,IAAI,CAAEhB,MAHR,CAIE,MAAM,CAAE,CACNiB,GAAG,CAAE,CADC,CAENC,KAAK,CAAE,EAFD,CAGNC,IAAI,CAAE,EAHA,CAINC,MAAM,CAAE,CAJF,CAJV,wBAWE,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAXF,cAYE,KAAC,KAAD,IAZF,cAaE,KAAC,OAAD,IAbF,cAcE,KAAC,MAAD,EACE,YAAY,CAAE,CACZC,MAAM,CAAE,YADI,CADhB,EAdF,cAmBE,KAAC,IAAD,EACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAC,gBAFV,CAGE,MAAM,CAAE3B,MAAM,CAAC4B,GAHjB,CAIE,GAAG,CAAE,KAJP,CAKE,SAAS,CAAE,CAAEC,CAAC,CAAE,CAAL,CALb,EAnBF,cA0BE,KAAC,IAAD,EACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAC,aAFV,CAGE,MAAM,CAAE7B,MAAM,CAAC8B,MAHjB,CAIE,GAAG,CAAE,KAJP,EA1BF,cAgCE,KAAC,IAAD,EACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAC,gBAFV,CAGE,MAAM,CAAE9B,MAAM,CAAC+B,KAHjB,CAIE,GAAG,CAAE,KAJP,EAhCF,cAsCE,KAAC,IAAD,EACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAC,eAFV,CAGE,MAAM,CAAE/B,MAAM,CAACgC,MAHjB,CAIE,GAAG,CAAE,KAJP,EAtCF,GADF,EADF,EADF,CAmDD,C,oBA3EkBxC,S,EA8ErB,cAAeF,CAAAA,UAAU,CAACW,MAAD,CAAV,CAAmBC,MAAnB,CAAf","sourcesContent":["import { withStyles } from \"@material-ui/styles\";\nimport React, { Component } from \"react\";\nimport {\n  Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis\n} from \"recharts\";\nimport colors from \"../constants/colors\";\nimport styles from '../styles/ChartsStyles';\n\nclass Charts extends Component {\n  render() {\n    const { data, classes } = this.props;\n    let result;\n    try {\n      const updatedData = data.slice(1).slice(-50);\n      result = updatedData.map((dataItem) => {\n        let newObject = {};\n        for (let [key, value] of Object.entries(dataItem)) {\n          if (key === \"date\") {\n            newObject[key] = value;\n          } else {\n            newObject[key] = Number(value);\n          }\n        }\n        return {\n          ...newObject,\n          totalactive:\n            newObject.totalconfirmed -\n            (newObject.totalrecovered + newObject.totaldeceased),\n        };\n      });\n    } catch (err) { }\n\n    return (\n      <div className={classes.charts}>\n        <ResponsiveContainer>\n          <LineChart\n            width={600}\n            height={300}\n            data={result}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend\n              wrapperStyle={{\n                margin: \"-3rem 1rem\",\n              }}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totalconfirmed\"\n              stroke={colors.red}\n              dot={false}\n              activeDot={{ r: 8 }}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totalactive\"\n              stroke={colors.orange}\n              dot={false}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totalrecovered\"\n              stroke={colors.green}\n              dot={false}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"totaldeceased\"\n              stroke={colors.purple}\n              dot={false}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Charts)"]},"metadata":{},"sourceType":"module"}